// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// NetworkSliceCond - Subscription to a set of NFs, based on the slices (S-NSSAI and NSI) they support
type NetworkSliceCond struct {

	SnssaiList []Snssai `json:"snssaiList"`

	NsiList []string `json:"nsiList,omitempty"`
}

// AssertNetworkSliceCondRequired checks if the required fields are not zero-ed
func AssertNetworkSliceCondRequired(obj NetworkSliceCond) error {
	elements := map[string]interface{}{
		"snssaiList": obj.SnssaiList,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.SnssaiList {
		if err := AssertSnssaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertNetworkSliceCondConstraints checks if the values respects the defined constraints
func AssertNetworkSliceCondConstraints(obj NetworkSliceCond) error {
	for _, el := range obj.SnssaiList {
		if err := AssertSnssaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
