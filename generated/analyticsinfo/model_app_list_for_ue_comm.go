// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo


import (
	"time"
	"errors"
)



// AppListForUeComm - Represents the analytics of the application list used by UE.
type AppListForUeComm struct {

	// String providing an application identifier.
	AppId string `json:"appId"`

	// string with format 'date-time' as defined in OpenAPI.
	StartTime time.Time `json:"startTime,omitempty"`

	// indicating a time in seconds.
	AppDur int32 `json:"appDur,omitempty"`

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  
	OccurRatio int32 `json:"occurRatio,omitempty"`

	SpatialValidity NetworkAreaInfo `json:"spatialValidity,omitempty"`
}

// AssertAppListForUeCommRequired checks if the required fields are not zero-ed
func AssertAppListForUeCommRequired(obj AppListForUeComm) error {
	elements := map[string]interface{}{
		"appId": obj.AppId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNetworkAreaInfoRequired(obj.SpatialValidity); err != nil {
		return err
	}
	return nil
}

// AssertAppListForUeCommConstraints checks if the values respects the defined constraints
func AssertAppListForUeCommConstraints(obj AppListForUeComm) error {
	if obj.OccurRatio < 1 {
		return &ParsingError{Param: "OccurRatio", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.OccurRatio > 100 {
		return &ParsingError{Param: "OccurRatio", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if err := AssertNetworkAreaInfoConstraints(obj.SpatialValidity); err != nil {
		return err
	}
	return nil
}
