// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// UpfCond - Subscription to a set of NF Instances (UPFs), able to serve a certain service area (i.e. SMF serving area or TAI list) 
type UpfCond struct {

	ConditionType string `json:"conditionType"`

	SmfServingArea []string `json:"smfServingArea,omitempty"`

	TaiList []Tai `json:"taiList,omitempty"`
}

// AssertUpfCondRequired checks if the required fields are not zero-ed
func AssertUpfCondRequired(obj UpfCond) error {
	elements := map[string]interface{}{
		"conditionType": obj.ConditionType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.TaiList {
		if err := AssertTaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertUpfCondConstraints checks if the values respects the defined constraints
func AssertUpfCondConstraints(obj UpfCond) error {
	for _, el := range obj.TaiList {
		if err := AssertTaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
