// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// AnalyticsContextIdentifier - Contains information about available analytics contexts.
type AnalyticsContextIdentifier struct {

	// The identifier of a subscription.
	SubscriptionId string `json:"subscriptionId,omitempty"`

	// List of analytics types for which NF related analytics contexts can be retrieved. 
	NfAnaCtxts []NwdafEvent `json:"nfAnaCtxts,omitempty"`

	// List of objects that indicate for which SUPI and analytics types combinations analytics  context can be retrieved. 
	UeAnaCtxts []UeAnalyticsContextDescriptor `json:"ueAnaCtxts,omitempty"`
}

// AssertAnalyticsContextIdentifierRequired checks if the required fields are not zero-ed
func AssertAnalyticsContextIdentifierRequired(obj AnalyticsContextIdentifier) error {
	for _, el := range obj.NfAnaCtxts {
		if err := AssertNwdafEventRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UeAnaCtxts {
		if err := AssertUeAnalyticsContextDescriptorRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertAnalyticsContextIdentifierConstraints checks if the values respects the defined constraints
func AssertAnalyticsContextIdentifierConstraints(obj AnalyticsContextIdentifier) error {
	for _, el := range obj.NfAnaCtxts {
		if err := AssertNwdafEventConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.UeAnaCtxts {
		if err := AssertUeAnalyticsContextDescriptorConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
