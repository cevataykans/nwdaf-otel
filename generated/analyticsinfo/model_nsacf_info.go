// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// NsacfInfo - Information of a NSACF NF Instance
type NsacfInfo struct {

	NsacfCapability NsacfCapability `json:"nsacfCapability"`

	// Deprecated
	TaiList []Tai `json:"taiList,omitempty"`

	// Deprecated
	TaiRangeList []TaiRange `json:"taiRangeList,omitempty"`

	NsacSaiList []string `json:"nsacSaiList,omitempty"`
}

// AssertNsacfInfoRequired checks if the required fields are not zero-ed
func AssertNsacfInfoRequired(obj NsacfInfo) error {
	elements := map[string]interface{}{
		"nsacfCapability": obj.NsacfCapability,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNsacfCapabilityRequired(obj.NsacfCapability); err != nil {
		return err
	}
	for _, el := range obj.TaiList {
		if err := AssertTaiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.TaiRangeList {
		if err := AssertTaiRangeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertNsacfInfoConstraints checks if the values respects the defined constraints
func AssertNsacfInfoConstraints(obj NsacfInfo) error {
	if err := AssertNsacfCapabilityConstraints(obj.NsacfCapability); err != nil {
		return err
	}
	for _, el := range obj.TaiList {
		if err := AssertTaiConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.TaiRangeList {
		if err := AssertTaiRangeConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
