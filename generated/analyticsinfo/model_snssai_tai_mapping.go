// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// SnssaiTaiMapping - List of restricted or unrestricted S-NSSAIs per TAI(s)
type SnssaiTaiMapping struct {

	ReportingArea TargetArea `json:"reportingArea"`

	AccessTypeList []AccessType `json:"accessTypeList,omitempty"`

	SupportedSnssaiList []SupportedSnssai `json:"supportedSnssaiList,omitempty"`
}

// AssertSnssaiTaiMappingRequired checks if the required fields are not zero-ed
func AssertSnssaiTaiMappingRequired(obj SnssaiTaiMapping) error {
	elements := map[string]interface{}{
		"reportingArea": obj.ReportingArea,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertTargetAreaRequired(obj.ReportingArea); err != nil {
		return err
	}
	for _, el := range obj.SupportedSnssaiList {
		if err := AssertSupportedSnssaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSnssaiTaiMappingConstraints checks if the values respects the defined constraints
func AssertSnssaiTaiMappingConstraints(obj SnssaiTaiMapping) error {
	if err := AssertTargetAreaConstraints(obj.ReportingArea); err != nil {
		return err
	}
	for _, el := range obj.SupportedSnssaiList {
		if err := AssertSupportedSnssaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
