// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo


import (
	"errors"
)



// GeographicalCoordinates - Geographical coordinates.
type GeographicalCoordinates struct {

	Lon float64 `json:"lon"`

	Lat float64 `json:"lat"`
}

// AssertGeographicalCoordinatesRequired checks if the required fields are not zero-ed
func AssertGeographicalCoordinatesRequired(obj GeographicalCoordinates) error {
	elements := map[string]interface{}{
		"lon": obj.Lon,
		"lat": obj.Lat,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertGeographicalCoordinatesConstraints checks if the values respects the defined constraints
func AssertGeographicalCoordinatesConstraints(obj GeographicalCoordinates) error {
	if obj.Lon < -180 {
		return &ParsingError{Param: "Lon", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Lon > 180 {
		return &ParsingError{Param: "Lon", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.Lat < -90 {
		return &ParsingError{Param: "Lat", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Lat > 90 {
		return &ParsingError{Param: "Lat", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
