// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo


import (
	"errors"
)



// AnalyticsMetadataInfo - Contains analytics metadata information required for analytics aggregation.
type AnalyticsMetadataInfo struct {

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	NumSamples int32 `json:"numSamples,omitempty"`

	DataWindow TimeWindow `json:"dataWindow,omitempty"`

	DataStatProps []DatasetStatisticalProperty `json:"dataStatProps,omitempty"`

	Strategy OutputStrategy `json:"strategy,omitempty"`

	Accuracy Accuracy `json:"accuracy,omitempty"`
}

// AssertAnalyticsMetadataInfoRequired checks if the required fields are not zero-ed
func AssertAnalyticsMetadataInfoRequired(obj AnalyticsMetadataInfo) error {
	if err := AssertTimeWindowRequired(obj.DataWindow); err != nil {
		return err
	}
	for _, el := range obj.DataStatProps {
		if err := AssertDatasetStatisticalPropertyRequired(el); err != nil {
			return err
		}
	}
	if err := AssertOutputStrategyRequired(obj.Strategy); err != nil {
		return err
	}
	if err := AssertAccuracyRequired(obj.Accuracy); err != nil {
		return err
	}
	return nil
}

// AssertAnalyticsMetadataInfoConstraints checks if the values respects the defined constraints
func AssertAnalyticsMetadataInfoConstraints(obj AnalyticsMetadataInfo) error {
	if obj.NumSamples < 0 {
		return &ParsingError{Param: "NumSamples", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertTimeWindowConstraints(obj.DataWindow); err != nil {
		return err
	}
	for _, el := range obj.DataStatProps {
		if err := AssertDatasetStatisticalPropertyConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertOutputStrategyConstraints(obj.Strategy); err != nil {
		return err
	}
	if err := AssertAccuracyConstraints(obj.Accuracy); err != nil {
		return err
	}
	return nil
}
