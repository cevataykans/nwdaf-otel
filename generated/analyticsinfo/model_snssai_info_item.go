// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// SnssaiInfoItem - Parameters supported by an NF for a given S-NSSAI Set of parameters supported by NF for a given S-NSSAI 
type SnssaiInfoItem struct {

	SNssai ExtSnssai `json:"sNssai"`

	DnnInfoList []DnnInfoItem `json:"dnnInfoList"`
}

// AssertSnssaiInfoItemRequired checks if the required fields are not zero-ed
func AssertSnssaiInfoItemRequired(obj SnssaiInfoItem) error {
	elements := map[string]interface{}{
		"sNssai": obj.SNssai,
		"dnnInfoList": obj.DnnInfoList,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertExtSnssaiRequired(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnInfoList {
		if err := AssertDnnInfoItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSnssaiInfoItemConstraints checks if the values respects the defined constraints
func AssertSnssaiInfoItemConstraints(obj SnssaiInfoItem) error {
	if err := AssertExtSnssaiConstraints(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnInfoList {
		if err := AssertDnnInfoItemConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
