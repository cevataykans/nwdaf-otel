// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo


import (
	"time"
)



// SacEventReportItem - Represents a report triggered by a subscribed event type
type SacEventReportItem struct {

	EventType SacEventType `json:"eventType"`

	EventState SacEventState `json:"eventState"`

	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp time.Time `json:"timeStamp"`

	EventFilter Snssai `json:"eventFilter"`

	SliceStautsInfo SacEventStatus `json:"sliceStautsInfo,omitempty"`
}

// AssertSacEventReportItemRequired checks if the required fields are not zero-ed
func AssertSacEventReportItemRequired(obj SacEventReportItem) error {
	elements := map[string]interface{}{
		"eventType": obj.EventType,
		"eventState": obj.EventState,
		"timeStamp": obj.TimeStamp,
		"eventFilter": obj.EventFilter,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSacEventTypeRequired(obj.EventType); err != nil {
		return err
	}
	if err := AssertSacEventStateRequired(obj.EventState); err != nil {
		return err
	}
	if err := AssertSnssaiRequired(obj.EventFilter); err != nil {
		return err
	}
	if err := AssertSacEventStatusRequired(obj.SliceStautsInfo); err != nil {
		return err
	}
	return nil
}

// AssertSacEventReportItemConstraints checks if the values respects the defined constraints
func AssertSacEventReportItemConstraints(obj SacEventReportItem) error {
	if err := AssertSacEventTypeConstraints(obj.EventType); err != nil {
		return err
	}
	if err := AssertSacEventStateConstraints(obj.EventState); err != nil {
		return err
	}
	if err := AssertSnssaiConstraints(obj.EventFilter); err != nil {
		return err
	}
	if err := AssertSacEventStatusConstraints(obj.SliceStautsInfo); err != nil {
		return err
	}
	return nil
}
