// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// DispersionArea - Dispersion Area
type DispersionArea struct {

	TaiList []Tai `json:"taiList,omitempty"`

	NcgiList []Ncgi `json:"ncgiList,omitempty"`

	EcgiList []Ecgi `json:"ecgiList,omitempty"`

	N3gaInd bool `json:"n3gaInd,omitempty"`
}

// AssertDispersionAreaRequired checks if the required fields are not zero-ed
func AssertDispersionAreaRequired(obj DispersionArea) error {
	for _, el := range obj.TaiList {
		if err := AssertTaiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.NcgiList {
		if err := AssertNcgiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.EcgiList {
		if err := AssertEcgiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertDispersionAreaConstraints checks if the values respects the defined constraints
func AssertDispersionAreaConstraints(obj DispersionArea) error {
	for _, el := range obj.TaiList {
		if err := AssertTaiConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.NcgiList {
		if err := AssertNcgiConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.EcgiList {
		if err := AssertEcgiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
