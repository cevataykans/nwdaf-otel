// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo


import (
	"errors"
)



// TransactionInfo - Represents SMF Transaction Information.
type TransactionInfo struct {

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Transaction int32 `json:"transaction"`

	Snssai Snssai `json:"snssai,omitempty"`

	AppIds []string `json:"appIds,omitempty"`

	TransacMetrics []TransactionMetric `json:"transacMetrics,omitempty"`
}

// AssertTransactionInfoRequired checks if the required fields are not zero-ed
func AssertTransactionInfoRequired(obj TransactionInfo) error {
	elements := map[string]interface{}{
		"transaction": obj.Transaction,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSnssaiRequired(obj.Snssai); err != nil {
		return err
	}
	for _, el := range obj.TransacMetrics {
		if err := AssertTransactionMetricRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertTransactionInfoConstraints checks if the values respects the defined constraints
func AssertTransactionInfoConstraints(obj TransactionInfo) error {
	if obj.Transaction < 0 {
		return &ParsingError{Param: "Transaction", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertSnssaiConstraints(obj.Snssai); err != nil {
		return err
	}
	for _, el := range obj.TransacMetrics {
		if err := AssertTransactionMetricConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
