// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_AnalyticsInfo
 *
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package analyticsinfo




// PlmnSnssai - List of network slices (S-NSSAIs) for a given PLMN ID
type PlmnSnssai struct {

	PlmnId PlmnId `json:"plmnId"`

	SNssaiList []ExtSnssai `json:"sNssaiList"`

	// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).  
	Nid string `json:"nid,omitempty" validate:"regexp=^[A-Fa-f0-9]{11}$"`
}

// AssertPlmnSnssaiRequired checks if the required fields are not zero-ed
func AssertPlmnSnssaiRequired(obj PlmnSnssai) error {
	elements := map[string]interface{}{
		"plmnId": obj.PlmnId,
		"sNssaiList": obj.SNssaiList,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPlmnIdRequired(obj.PlmnId); err != nil {
		return err
	}
	for _, el := range obj.SNssaiList {
		if err := AssertExtSnssaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPlmnSnssaiConstraints checks if the values respects the defined constraints
func AssertPlmnSnssaiConstraints(obj PlmnSnssai) error {
	if err := AssertPlmnIdConstraints(obj.PlmnId); err != nil {
		return err
	}
	for _, el := range obj.SNssaiList {
		if err := AssertExtSnssaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
