// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.0
 */

package mlmodelprovision




// DispersionRequirement - Represents the dispersion analytics requirements.
type DispersionRequirement struct {

	DisperType DispersionType `json:"disperType"`

	ClassCriters []ClassCriterion `json:"classCriters,omitempty"`

	RankCriters []RankingCriterion `json:"rankCriters,omitempty"`

	DispOrderCriter DispersionOrderingCriterion `json:"dispOrderCriter,omitempty"`

	Order MatchingDirection `json:"order,omitempty"`
}

// AssertDispersionRequirementRequired checks if the required fields are not zero-ed
func AssertDispersionRequirementRequired(obj DispersionRequirement) error {
	elements := map[string]interface{}{
		"disperType": obj.DisperType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertDispersionTypeRequired(obj.DisperType); err != nil {
		return err
	}
	for _, el := range obj.ClassCriters {
		if err := AssertClassCriterionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.RankCriters {
		if err := AssertRankingCriterionRequired(el); err != nil {
			return err
		}
	}
	if err := AssertDispersionOrderingCriterionRequired(obj.DispOrderCriter); err != nil {
		return err
	}
	if err := AssertMatchingDirectionRequired(obj.Order); err != nil {
		return err
	}
	return nil
}

// AssertDispersionRequirementConstraints checks if the values respects the defined constraints
func AssertDispersionRequirementConstraints(obj DispersionRequirement) error {
	if err := AssertDispersionTypeConstraints(obj.DisperType); err != nil {
		return err
	}
	for _, el := range obj.ClassCriters {
		if err := AssertClassCriterionConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.RankCriters {
		if err := AssertRankingCriterionConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertDispersionOrderingCriterionConstraints(obj.DispOrderCriter); err != nil {
		return err
	}
	if err := AssertMatchingDirectionConstraints(obj.Order); err != nil {
		return err
	}
	return nil
}
