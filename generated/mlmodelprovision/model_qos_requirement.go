// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_MLModelProvision
 *
 * Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.0
 */

package mlmodelprovision


import (
	"errors"
)



// QosRequirement - Represents the QoS requirements.
type QosRequirement struct {

	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255. 
	Var5qi int32 `json:"5qi,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	GfbrUl string `json:"gfbrUl,omitempty"`

	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	GfbrDl string `json:"gfbrDl,omitempty"`

	ResType QosResourceType `json:"resType,omitempty"`

	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds. 
	Pdb int32 `json:"pdb,omitempty"`

	// String representing Packet Error Rate (see clause 5.7.3.5 and 5.7.4 of 3GPP TS 23.501, expressed as a \"scalar x 10-k\" where the scalar and the exponent k are each encoded as one decimal digit. 
	Per string `json:"per,omitempty"`
}

// AssertQosRequirementRequired checks if the required fields are not zero-ed
func AssertQosRequirementRequired(obj QosRequirement) error {
	if err := AssertQosResourceTypeRequired(obj.ResType); err != nil {
		return err
	}
	return nil
}

// AssertQosRequirementConstraints checks if the values respects the defined constraints
func AssertQosRequirementConstraints(obj QosRequirement) error {
	if obj.Var5qi < 0 {
		return &ParsingError{Param: "Var5qi", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Var5qi > 255 {
		return &ParsingError{Param: "Var5qi", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if err := AssertQosResourceTypeConstraints(obj.ResType); err != nil {
		return err
	}
	if obj.Pdb < 1 {
		return &ParsingError{Param: "Pdb", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
