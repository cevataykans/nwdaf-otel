// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// DynamicPolicy - A representation of a Dynamic Policy resource.
type DynamicPolicy struct {

	// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
	DynamicPolicyId string `json:"dynamicPolicyId"`

	// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
	PolicyTemplateId string `json:"policyTemplateId"`

	ServiceDataFlowDescriptions []ServiceDataFlowDescription `json:"serviceDataFlowDescriptions"`

	MediaType MediaType `json:"mediaType,omitempty"`

	// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
	ProvisioningSessionId string `json:"provisioningSessionId"`

	QosSpecification M5QoSSpecification `json:"qosSpecification,omitempty"`

	EnforcementMethod string `json:"enforcementMethod,omitempty"`

	EnforcementBitRate int32 `json:"enforcementBitRate,omitempty"`
}

// AssertDynamicPolicyRequired checks if the required fields are not zero-ed
func AssertDynamicPolicyRequired(obj DynamicPolicy) error {
	elements := map[string]interface{}{
		"dynamicPolicyId": obj.DynamicPolicyId,
		"policyTemplateId": obj.PolicyTemplateId,
		"serviceDataFlowDescriptions": obj.ServiceDataFlowDescriptions,
		"provisioningSessionId": obj.ProvisioningSessionId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.ServiceDataFlowDescriptions {
		if err := AssertServiceDataFlowDescriptionRequired(el); err != nil {
			return err
		}
	}
	if err := AssertMediaTypeRequired(obj.MediaType); err != nil {
		return err
	}
	if err := AssertM5QoSSpecificationRequired(obj.QosSpecification); err != nil {
		return err
	}
	return nil
}

// AssertDynamicPolicyConstraints checks if the values respects the defined constraints
func AssertDynamicPolicyConstraints(obj DynamicPolicy) error {
	for _, el := range obj.ServiceDataFlowDescriptions {
		if err := AssertServiceDataFlowDescriptionConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertMediaTypeConstraints(obj.MediaType); err != nil {
		return err
	}
	if err := AssertM5QoSSpecificationConstraints(obj.QosSpecification); err != nil {
		return err
	}
	return nil
}
