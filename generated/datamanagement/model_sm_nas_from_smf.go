// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement


import (
	"time"
)



// SmNasFromSmf - Represents information on the SM congestion control applied SM NAS messages that SMF sends  to UE for PDU Session. 
type SmNasFromSmf struct {

	SmNasType string `json:"smNasType"`

	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp time.Time `json:"timeStamp"`

	// indicating a time in seconds.
	BackoffTimer int32 `json:"backoffTimer"`

	AppliedSmccType AppliedSmccType `json:"appliedSmccType"`
}

// AssertSmNasFromSmfRequired checks if the required fields are not zero-ed
func AssertSmNasFromSmfRequired(obj SmNasFromSmf) error {
	elements := map[string]interface{}{
		"smNasType": obj.SmNasType,
		"timeStamp": obj.TimeStamp,
		"backoffTimer": obj.BackoffTimer,
		"appliedSmccType": obj.AppliedSmccType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertAppliedSmccTypeRequired(obj.AppliedSmccType); err != nil {
		return err
	}
	return nil
}

// AssertSmNasFromSmfConstraints checks if the values respects the defined constraints
func AssertSmNasFromSmfConstraints(obj SmNasFromSmf) error {
	if err := AssertAppliedSmccTypeConstraints(obj.AppliedSmccType); err != nil {
		return err
	}
	return nil
}
