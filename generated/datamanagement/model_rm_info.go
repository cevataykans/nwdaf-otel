// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// RmInfo - Represents the registration state of a UE for an access type
type RmInfo struct {

	RmState RmState `json:"rmState"`

	AccessType AccessType `json:"accessType"`
}

// AssertRmInfoRequired checks if the required fields are not zero-ed
func AssertRmInfoRequired(obj RmInfo) error {
	elements := map[string]interface{}{
		"rmState": obj.RmState,
		"accessType": obj.AccessType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertRmStateRequired(obj.RmState); err != nil {
		return err
	}
	return nil
}

// AssertRmInfoConstraints checks if the values respects the defined constraints
func AssertRmInfoConstraints(obj RmInfo) error {
	if err := AssertRmStateConstraints(obj.RmState); err != nil {
		return err
	}
	return nil
}
