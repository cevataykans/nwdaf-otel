// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// DataSubscription - Contains a data specification.
type DataSubscription struct {

	AmfDataSub AmfEventSubscription `json:"amfDataSub,omitempty"`

	SmfDataSub NsmfEventExposure `json:"smfDataSub,omitempty"`

	UdmDataSub EeSubscription `json:"udmDataSub,omitempty"`

	AfDataSub AfEventExposureSubsc `json:"afDataSub,omitempty"`

	NefDataSub NefEventExposureSubsc `json:"nefDataSub,omitempty"`

	NrfDataSub SubscriptionData `json:"nrfDataSub,omitempty"`

	NsacfDataSub SacEventSubscription `json:"nsacfDataSub,omitempty"`
}

// AssertDataSubscriptionRequired checks if the required fields are not zero-ed
func AssertDataSubscriptionRequired(obj DataSubscription) error {
	if err := AssertAmfEventSubscriptionRequired(obj.AmfDataSub); err != nil {
		return err
	}
	if err := AssertNsmfEventExposureRequired(obj.SmfDataSub); err != nil {
		return err
	}
	if err := AssertEeSubscriptionRequired(obj.UdmDataSub); err != nil {
		return err
	}
	if err := AssertAfEventExposureSubscRequired(obj.AfDataSub); err != nil {
		return err
	}
	if err := AssertNefEventExposureSubscRequired(obj.NefDataSub); err != nil {
		return err
	}
	if err := AssertSubscriptionDataRequired(obj.NrfDataSub); err != nil {
		return err
	}
	if err := AssertSacEventSubscriptionRequired(obj.NsacfDataSub); err != nil {
		return err
	}
	return nil
}

// AssertDataSubscriptionConstraints checks if the values respects the defined constraints
func AssertDataSubscriptionConstraints(obj DataSubscription) error {
	if err := AssertAmfEventSubscriptionConstraints(obj.AmfDataSub); err != nil {
		return err
	}
	if err := AssertNsmfEventExposureConstraints(obj.SmfDataSub); err != nil {
		return err
	}
	if err := AssertEeSubscriptionConstraints(obj.UdmDataSub); err != nil {
		return err
	}
	if err := AssertAfEventExposureSubscConstraints(obj.AfDataSub); err != nil {
		return err
	}
	if err := AssertNefEventExposureSubscConstraints(obj.NefDataSub); err != nil {
		return err
	}
	if err := AssertSubscriptionDataConstraints(obj.NrfDataSub); err != nil {
		return err
	}
	if err := AssertSacEventSubscriptionConstraints(obj.NsacfDataSub); err != nil {
		return err
	}
	return nil
}
