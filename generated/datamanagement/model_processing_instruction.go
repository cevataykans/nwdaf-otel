// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// ProcessingInstruction - Contains instructions related to the processing of notifications.
type ProcessingInstruction struct {

	EventId *DccfEvent `json:"eventId"`

	// indicating a time in seconds.
	ProcInterval int32 `json:"procInterval"`

	// List of event parameter names, and for each event parameter name, respective event parameter values and sets of the attributes to be used in the summarized reports. 
	ParamProcInstructs []ParameterProcessingInstruction `json:"paramProcInstructs,omitempty"`
}

// AssertProcessingInstructionRequired checks if the required fields are not zero-ed
func AssertProcessingInstructionRequired(obj ProcessingInstruction) error {
	elements := map[string]interface{}{
		"eventId": obj.EventId,
		"procInterval": obj.ProcInterval,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if obj.EventId != nil {
		if err := AssertDccfEventRequired(*obj.EventId); err != nil {
			return err
		}
	}
	for _, el := range obj.ParamProcInstructs {
		if err := AssertParameterProcessingInstructionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertProcessingInstructionConstraints checks if the values respects the defined constraints
func AssertProcessingInstructionConstraints(obj ProcessingInstruction) error {
    if obj.EventId != nil {
     	if err := AssertDccfEventConstraints(*obj.EventId); err != nil {
     		return err
     	}
    }
	for _, el := range obj.ParamProcInstructs {
		if err := AssertParameterProcessingInstructionConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
