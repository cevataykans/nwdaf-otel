// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// DnPerf - Represents DN performance for the application.
type DnPerf struct {

	AppServerInsAddr AddrFqdn `json:"appServerInsAddr,omitempty"`

	UpfInfo UpfInformation `json:"upfInfo,omitempty"`

	// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
	Dnai string `json:"dnai,omitempty"`

	PerfData PerfData `json:"perfData"`

	SpatialValidCon NetworkAreaInfo `json:"spatialValidCon,omitempty"`

	TemporalValidCon TimeWindow `json:"temporalValidCon,omitempty"`
}

// AssertDnPerfRequired checks if the required fields are not zero-ed
func AssertDnPerfRequired(obj DnPerf) error {
	elements := map[string]interface{}{
		"perfData": obj.PerfData,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertAddrFqdnRequired(obj.AppServerInsAddr); err != nil {
		return err
	}
	if err := AssertUpfInformationRequired(obj.UpfInfo); err != nil {
		return err
	}
	if err := AssertPerfDataRequired(obj.PerfData); err != nil {
		return err
	}
	if err := AssertNetworkAreaInfoRequired(obj.SpatialValidCon); err != nil {
		return err
	}
	if err := AssertTimeWindowRequired(obj.TemporalValidCon); err != nil {
		return err
	}
	return nil
}

// AssertDnPerfConstraints checks if the values respects the defined constraints
func AssertDnPerfConstraints(obj DnPerf) error {
	if err := AssertAddrFqdnConstraints(obj.AppServerInsAddr); err != nil {
		return err
	}
	if err := AssertUpfInformationConstraints(obj.UpfInfo); err != nil {
		return err
	}
	if err := AssertPerfDataConstraints(obj.PerfData); err != nil {
		return err
	}
	if err := AssertNetworkAreaInfoConstraints(obj.SpatialValidCon); err != nil {
		return err
	}
	if err := AssertTimeWindowConstraints(obj.TemporalValidCon); err != nil {
		return err
	}
	return nil
}
