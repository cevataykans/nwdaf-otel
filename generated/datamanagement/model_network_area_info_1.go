// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// NetworkAreaInfo1 - Describes a network area information in which the NF service consumer requests the number of UEs.
type NetworkAreaInfo1 struct {

	// Contains a list of E-UTRA cell identities.
	Ecgis []Ecgi `json:"ecgis,omitempty"`

	// Contains a list of NR cell identities.
	Ncgis []Ncgi `json:"ncgis,omitempty"`

	// Contains a list of NG RAN nodes.
	GRanNodeIds []GlobalRanNodeId `json:"gRanNodeIds,omitempty"`

	// Contains a list of tracking area identities.
	Tais []Tai `json:"tais,omitempty"`
}

// AssertNetworkAreaInfo1Required checks if the required fields are not zero-ed
func AssertNetworkAreaInfo1Required(obj NetworkAreaInfo1) error {
	for _, el := range obj.Ecgis {
		if err := AssertEcgiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Ncgis {
		if err := AssertNcgiRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.GRanNodeIds {
		if err := AssertGlobalRanNodeIdRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Tais {
		if err := AssertTaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertNetworkAreaInfo1Constraints checks if the values respects the defined constraints
func AssertNetworkAreaInfo1Constraints(obj NetworkAreaInfo1) error {
	for _, el := range obj.Ecgis {
		if err := AssertEcgiConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Ncgis {
		if err := AssertNcgiConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.GRanNodeIds {
		if err := AssertGlobalRanNodeIdConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Tais {
		if err := AssertTaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
