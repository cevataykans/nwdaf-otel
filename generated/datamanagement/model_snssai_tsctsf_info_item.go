// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// SnssaiTsctsfInfoItem - Set of parameters supported by TSCTSF for a given S-NSSAI
type SnssaiTsctsfInfoItem struct {

	SNssai ExtSnssai `json:"sNssai"`

	DnnInfoList []DnnTsctsfInfoItem `json:"dnnInfoList"`
}

// AssertSnssaiTsctsfInfoItemRequired checks if the required fields are not zero-ed
func AssertSnssaiTsctsfInfoItemRequired(obj SnssaiTsctsfInfoItem) error {
	elements := map[string]interface{}{
		"sNssai": obj.SNssai,
		"dnnInfoList": obj.DnnInfoList,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertExtSnssaiRequired(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnInfoList {
		if err := AssertDnnTsctsfInfoItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSnssaiTsctsfInfoItemConstraints checks if the values respects the defined constraints
func AssertSnssaiTsctsfInfoItemConstraints(obj SnssaiTsctsfInfoItem) error {
	if err := AssertExtSnssaiConstraints(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnInfoList {
		if err := AssertDnnTsctsfInfoItemConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
