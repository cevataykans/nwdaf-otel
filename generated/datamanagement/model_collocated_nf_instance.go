// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// CollocatedNfInstance - Information of an collocated NF Instance registered in the NRF
type CollocatedNfInstance struct {

	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	NfInstanceId string `json:"nfInstanceId"`

	NfType CollocatedNfType `json:"nfType"`
}

// AssertCollocatedNfInstanceRequired checks if the required fields are not zero-ed
func AssertCollocatedNfInstanceRequired(obj CollocatedNfInstance) error {
	elements := map[string]interface{}{
		"nfInstanceId": obj.NfInstanceId,
		"nfType": obj.NfType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCollocatedNfTypeRequired(obj.NfType); err != nil {
		return err
	}
	return nil
}

// AssertCollocatedNfInstanceConstraints checks if the values respects the defined constraints
func AssertCollocatedNfInstanceConstraints(obj CollocatedNfInstance) error {
	if err := AssertCollocatedNfTypeConstraints(obj.NfType); err != nil {
		return err
	}
	return nil
}
