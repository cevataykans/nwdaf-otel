// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// SliceLoadLevelInformation - Contains load level information applicable for one or several slices.
type SliceLoadLevelInformation struct {

	// Load level information of the network slice and the optionally associated network slice  instance. 
	LoadLevelInformation int32 `json:"loadLevelInformation"`

	// Identification(s) of network slice to which the subscription applies.
	Snssais []Snssai `json:"snssais"`
}

// AssertSliceLoadLevelInformationRequired checks if the required fields are not zero-ed
func AssertSliceLoadLevelInformationRequired(obj SliceLoadLevelInformation) error {
	elements := map[string]interface{}{
		"loadLevelInformation": obj.LoadLevelInformation,
		"snssais": obj.Snssais,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Snssais {
		if err := AssertSnssaiRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSliceLoadLevelInformationConstraints checks if the values respects the defined constraints
func AssertSliceLoadLevelInformationConstraints(obj SliceLoadLevelInformation) error {
	for _, el := range obj.Snssais {
		if err := AssertSnssaiConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
