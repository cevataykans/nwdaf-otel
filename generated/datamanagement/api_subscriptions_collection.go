// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement

import (
	"encoding/json"
	"net/http"
	"strings"
)

// SubscriptionsCollectionAPIController binds http requests to an api service and writes the service results to the http response
type SubscriptionsCollectionAPIController struct {
	service SubscriptionsCollectionAPIServicer
	errorHandler ErrorHandler
}

// SubscriptionsCollectionAPIOption for how the controller is set up.
type SubscriptionsCollectionAPIOption func(*SubscriptionsCollectionAPIController)

// WithSubscriptionsCollectionAPIErrorHandler inject ErrorHandler into controller
func WithSubscriptionsCollectionAPIErrorHandler(h ErrorHandler) SubscriptionsCollectionAPIOption {
	return func(c *SubscriptionsCollectionAPIController) {
		c.errorHandler = h
	}
}

// NewSubscriptionsCollectionAPIController creates a default api controller
func NewSubscriptionsCollectionAPIController(s SubscriptionsCollectionAPIServicer, opts ...SubscriptionsCollectionAPIOption) *SubscriptionsCollectionAPIController {
	controller := &SubscriptionsCollectionAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the SubscriptionsCollectionAPIController
func (c *SubscriptionsCollectionAPIController) Routes() Routes {
	return Routes{
		"CreateIndividualSubcription": Route{
			"CreateIndividualSubcription",
			strings.ToUpper("Post"),
			"/nnwdaf-datamanagement/v1/subscriptions",
			c.CreateIndividualSubcription,
		},
	}
}

// OrderedRoutes returns all the api routes in a deterministic order for the SubscriptionsCollectionAPIController
func (c *SubscriptionsCollectionAPIController) OrderedRoutes() []Route {
	return []Route{
		Route{
			"CreateIndividualSubcription",
			strings.ToUpper("Post"),
			"/nnwdaf-datamanagement/v1/subscriptions",
			c.CreateIndividualSubcription,
		},
	}
}



// CreateIndividualSubcription - subscribe to notifications
func (c *SubscriptionsCollectionAPIController) CreateIndividualSubcription(w http.ResponseWriter, r *http.Request) {
	var nnwdafDataManagementSubscParam NnwdafDataManagementSubsc
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&nnwdafDataManagementSubscParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertNnwdafDataManagementSubscRequired(nnwdafDataManagementSubscParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertNnwdafDataManagementSubscConstraints(nnwdafDataManagementSubscParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.CreateIndividualSubcription(r.Context(), &nnwdafDataManagementSubscParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}
