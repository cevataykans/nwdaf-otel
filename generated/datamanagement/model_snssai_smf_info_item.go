// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// SnssaiSmfInfoItem - Set of parameters supported by SMF for a given S-NSSAI
type SnssaiSmfInfoItem struct {

	SNssai ExtSnssai `json:"sNssai"`

	DnnSmfInfoList []DnnSmfInfoItem `json:"dnnSmfInfoList"`
}

// AssertSnssaiSmfInfoItemRequired checks if the required fields are not zero-ed
func AssertSnssaiSmfInfoItemRequired(obj SnssaiSmfInfoItem) error {
	elements := map[string]interface{}{
		"sNssai": obj.SNssai,
		"dnnSmfInfoList": obj.DnnSmfInfoList,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertExtSnssaiRequired(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnSmfInfoList {
		if err := AssertDnnSmfInfoItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSnssaiSmfInfoItemConstraints checks if the values respects the defined constraints
func AssertSnssaiSmfInfoItemConstraints(obj SnssaiSmfInfoItem) error {
	if err := AssertExtSnssaiConstraints(obj.SNssai); err != nil {
		return err
	}
	for _, el := range obj.DnnSmfInfoList {
		if err := AssertDnnSmfInfoItemConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
