// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




// LocationArea5G - Represents a user location area when the UE is attached to 5G.
type LocationArea5G struct {

	// Identifies a list of geographic area of the user where the UE is located.
	GeographicAreas []GeographicArea `json:"geographicAreas,omitempty"`

	// Identifies a list of civic addresses of the user where the UE is located.
	CivicAddresses []CivicAddress `json:"civicAddresses,omitempty"`

	NwAreaInfo NetworkAreaInfo `json:"nwAreaInfo,omitempty"`
}

// AssertLocationArea5GRequired checks if the required fields are not zero-ed
func AssertLocationArea5GRequired(obj LocationArea5G) error {
	for _, el := range obj.GeographicAreas {
		if err := AssertGeographicAreaRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.CivicAddresses {
		if err := AssertCivicAddressRequired(el); err != nil {
			return err
		}
	}
	if err := AssertNetworkAreaInfoRequired(obj.NwAreaInfo); err != nil {
		return err
	}
	return nil
}

// AssertLocationArea5GConstraints checks if the values respects the defined constraints
func AssertLocationArea5GConstraints(obj LocationArea5G) error {
	for _, el := range obj.GeographicAreas {
		if err := AssertGeographicAreaConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.CivicAddresses {
		if err := AssertCivicAddressConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertNetworkAreaInfoConstraints(obj.NwAreaInfo); err != nil {
		return err
	}
	return nil
}
