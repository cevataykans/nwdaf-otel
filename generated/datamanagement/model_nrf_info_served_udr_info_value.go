// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_DataManagement
 *
 * Nnwdaf_DataManagement API Service.   Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.0.3
 */

package datamanagement




type NrfInfoServedUdrInfoValue struct {

	// Identifier of a group of NFs.
	GroupId string `json:"groupId,omitempty"`

	SupiRanges []SupiRange `json:"supiRanges,omitempty"`

	GpsiRanges []IdentityRange `json:"gpsiRanges,omitempty"`

	ExternalGroupIdentifiersRanges []IdentityRange `json:"externalGroupIdentifiersRanges,omitempty"`

	SupportedDataSets []DataSetId `json:"supportedDataSets,omitempty"`

	SharedDataIdRanges []SharedDataIdRange `json:"sharedDataIdRanges,omitempty"`
}

// AssertNrfInfoServedUdrInfoValueRequired checks if the required fields are not zero-ed
func AssertNrfInfoServedUdrInfoValueRequired(obj NrfInfoServedUdrInfoValue) error {
	for _, el := range obj.SupiRanges {
		if err := AssertSupiRangeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.GpsiRanges {
		if err := AssertIdentityRangeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ExternalGroupIdentifiersRanges {
		if err := AssertIdentityRangeRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SupportedDataSets {
		if err := AssertDataSetIdRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SharedDataIdRanges {
		if err := AssertSharedDataIdRangeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertNrfInfoServedUdrInfoValueConstraints checks if the values respects the defined constraints
func AssertNrfInfoServedUdrInfoValueConstraints(obj NrfInfoServedUdrInfoValue) error {
	for _, el := range obj.SupiRanges {
		if err := AssertSupiRangeConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.GpsiRanges {
		if err := AssertIdentityRangeConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ExternalGroupIdentifiersRanges {
		if err := AssertIdentityRangeConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SupportedDataSets {
		if err := AssertDataSetIdConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.SharedDataIdRanges {
		if err := AssertSharedDataIdRangeConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
