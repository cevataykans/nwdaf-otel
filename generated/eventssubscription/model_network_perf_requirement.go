// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package eventssubscription


import (
	"errors"
)



// NetworkPerfRequirement - Represents a network performance requirement.
type NetworkPerfRequirement struct {

	NwPerfType NetworkPerfType `json:"nwPerfType"`

	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  
	RelativeRatio int32 `json:"relativeRatio,omitempty"`

	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	AbsoluteNum int32 `json:"absoluteNum,omitempty"`
}

// AssertNetworkPerfRequirementRequired checks if the required fields are not zero-ed
func AssertNetworkPerfRequirementRequired(obj NetworkPerfRequirement) error {
	elements := map[string]interface{}{
		"nwPerfType": obj.NwPerfType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNetworkPerfTypeRequired(obj.NwPerfType); err != nil {
		return err
	}
	return nil
}

// AssertNetworkPerfRequirementConstraints checks if the values respects the defined constraints
func AssertNetworkPerfRequirementConstraints(obj NetworkPerfRequirement) error {
	if err := AssertNetworkPerfTypeConstraints(obj.NwPerfType); err != nil {
		return err
	}
	if obj.RelativeRatio < 1 {
		return &ParsingError{Param: "RelativeRatio", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.RelativeRatio > 100 {
		return &ParsingError{Param: "RelativeRatio", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.AbsoluteNum < 0 {
		return &ParsingError{Param: "AbsoluteNum", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
