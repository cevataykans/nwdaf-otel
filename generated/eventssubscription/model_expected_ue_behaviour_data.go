// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package eventssubscription


import (
	"time"
)



type ExpectedUeBehaviourData struct {

	StationaryIndication StationaryIndication `json:"stationaryIndication,omitempty"`

	// indicating a time in seconds.
	CommunicationDurationTime int32 `json:"communicationDurationTime,omitempty"`

	// indicating a time in seconds.
	PeriodicTime int32 `json:"periodicTime,omitempty"`

	ScheduledCommunicationTime ScheduledCommunicationTime1 `json:"scheduledCommunicationTime,omitempty"`

	ScheduledCommunicationType ScheduledCommunicationType `json:"scheduledCommunicationType,omitempty"`

	// Identifies the UE's expected geographical movement. The attribute is only applicable in 5G.
	ExpectedUmts []LocationArea `json:"expectedUmts,omitempty"`

	TrafficProfile TrafficProfile `json:"trafficProfile,omitempty"`

	BatteryIndication BatteryIndication `json:"batteryIndication,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime time.Time `json:"validityTime,omitempty"`
}

// AssertExpectedUeBehaviourDataRequired checks if the required fields are not zero-ed
func AssertExpectedUeBehaviourDataRequired(obj ExpectedUeBehaviourData) error {
	if err := AssertStationaryIndicationRequired(obj.StationaryIndication); err != nil {
		return err
	}
	if err := AssertScheduledCommunicationTime1Required(obj.ScheduledCommunicationTime); err != nil {
		return err
	}
	if err := AssertScheduledCommunicationTypeRequired(obj.ScheduledCommunicationType); err != nil {
		return err
	}
	for _, el := range obj.ExpectedUmts {
		if err := AssertLocationAreaRequired(el); err != nil {
			return err
		}
	}
	if err := AssertTrafficProfileRequired(obj.TrafficProfile); err != nil {
		return err
	}
	if err := AssertBatteryIndicationRequired(obj.BatteryIndication); err != nil {
		return err
	}
	return nil
}

// AssertExpectedUeBehaviourDataConstraints checks if the values respects the defined constraints
func AssertExpectedUeBehaviourDataConstraints(obj ExpectedUeBehaviourData) error {
	if err := AssertStationaryIndicationConstraints(obj.StationaryIndication); err != nil {
		return err
	}
	if err := AssertScheduledCommunicationTime1Constraints(obj.ScheduledCommunicationTime); err != nil {
		return err
	}
	if err := AssertScheduledCommunicationTypeConstraints(obj.ScheduledCommunicationType); err != nil {
		return err
	}
	for _, el := range obj.ExpectedUmts {
		if err := AssertLocationAreaConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertTrafficProfileConstraints(obj.TrafficProfile); err != nil {
		return err
	}
	if err := AssertBatteryIndicationConstraints(obj.BatteryIndication); err != nil {
		return err
	}
	return nil
}
