// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package eventssubscription


import (
	"errors"
)



// SessInactTimerForUeComm - Represents the N4 Session inactivity timer.
type SessInactTimerForUeComm struct {

	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.  
	N4SessId int32 `json:"n4SessId"`

	// indicating a time in seconds.
	SessInactiveTimer int32 `json:"sessInactiveTimer"`
}

// AssertSessInactTimerForUeCommRequired checks if the required fields are not zero-ed
func AssertSessInactTimerForUeCommRequired(obj SessInactTimerForUeComm) error {
	elements := map[string]interface{}{
		"n4SessId": obj.N4SessId,
		"sessInactiveTimer": obj.SessInactiveTimer,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertSessInactTimerForUeCommConstraints checks if the values respects the defined constraints
func AssertSessInactTimerForUeCommConstraints(obj SessInactTimerForUeComm) error {
	if obj.N4SessId < 0 {
		return &ParsingError{Param: "N4SessId", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.N4SessId > 255 {
		return &ParsingError{Param: "N4SessId", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
