// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API.   Â© 2025, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * API version: 1.2.4
 */

package eventssubscription


import (
	"time"
)



// DispersionInfo - Represents the Dispersion information. When subscribed event is \"DISPERSION\", the  \"disperInfos\" attribute shall be included. 
type DispersionInfo struct {

	// string with format 'date-time' as defined in OpenAPI.
	TsStart time.Time `json:"tsStart"`

	// indicating a time in seconds.
	TsDuration int32 `json:"tsDuration"`

	DisperCollects []DispersionCollection `json:"disperCollects"`

	DisperType DispersionType `json:"disperType"`
}

// AssertDispersionInfoRequired checks if the required fields are not zero-ed
func AssertDispersionInfoRequired(obj DispersionInfo) error {
	elements := map[string]interface{}{
		"tsStart": obj.TsStart,
		"tsDuration": obj.TsDuration,
		"disperCollects": obj.DisperCollects,
		"disperType": obj.DisperType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.DisperCollects {
		if err := AssertDispersionCollectionRequired(el); err != nil {
			return err
		}
	}
	if err := AssertDispersionTypeRequired(obj.DisperType); err != nil {
		return err
	}
	return nil
}

// AssertDispersionInfoConstraints checks if the values respects the defined constraints
func AssertDispersionInfoConstraints(obj DispersionInfo) error {
	for _, el := range obj.DisperCollects {
		if err := AssertDispersionCollectionConstraints(el); err != nil {
			return err
		}
	}
	if err := AssertDispersionTypeConstraints(obj.DisperType); err != nil {
		return err
	}
	return nil
}
